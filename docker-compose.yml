services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: scada_chatbot_postgres
    environment:
      POSTGRES_DB: scada_chatbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scada_chatbot"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Ollama service (optimized for Apple Silicon M3 Max)
  ollama:
    image: ollama/ollama:latest
    container_name: scada_chatbot_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    restart: unless-stopped

  # Streamlit application
  app:
    build: .
    container_name: scada_chatbot_app
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=scada_chatbot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.2:3b
      - OLLAMA_EMBEDDING_MODEL=nomic-embed-text
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local

networks:
  default:
    name: scada_chatbot_network 